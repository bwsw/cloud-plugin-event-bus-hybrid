# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

image: maven:3.5.4

stages:
  - prepare
  - build
  - test
  - deploy
  - mirror

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml"
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  GIT_SUBMODULE_STRATEGY: recursive
  CLOUDSTACK_VERSION: "4.11.1.0"
  UPSTREAM_REPOSITORY: "git@github.com:bwsw/cloud-plugin-event-bus-hybrid.git"
  UPSTREAM_BRANCH: "master"

cache:
  paths:
    - .m2/repository/
    - target/

prepare:
  stage: prepare
  before_script:
    - cd cloudstack
    - git checkout "$CLOUDSTACK_VERSION"
  script:
    - cd .. && mvn $MAVEN_CLI_OPTS validate || (cd cloudstack && mvn -Pdeveloper -DskipTests clean install)
  tags:
    - build-in-docker
    - cs-eco-builder

build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean compile
  tags:
    - build-in-docker
    - cs-eco-builder

test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS test
  tags:
    - build-in-docker
    - cs-eco-builder

deploy:
  stage: deploy
  script:
    - mvn $MAVEN_CLI_OPTS deploy
  tags:
    - build-in-docker
    - cs-eco-builder
  only:
    - master

mirror-master:
  stage: mirror
  variables:
    GIT_SUBMODULE_STRATEGY: none
    GIT_STRATEGY: clone
  cache: {}
  only:
    - master
  script:
    - mkdir -p ~/.ssh
    - echo $GITHUB_MIRROR_PRIVATE | base64 -d > ~/.ssh/id_rsa
    - echo $GITHUB_MIRROR_PUBLIC > ~/.ssh/id_rsa.pub
    - ssh-keyscan -t rsa,dsa,ecdsa github.com >> ~/.ssh/known_hosts
    - chmod -R go-rwx ~/.ssh
    - git remote add mirror $UPSTREAM_REPOSITORY
    - git remote show mirror
    - git fetch mirror
    - git push --progress mirror HEAD:$UPSTREAM_BRANCH
  tags:
    - build-in-docker
    - cs-eco-builder
